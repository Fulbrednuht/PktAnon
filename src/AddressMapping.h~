	//
// Copyright (C) 2014 
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//

#ifndef __ADDRESSMAPPING_H
#define __ADDRESSMAPPING_H

#include <boost/unordered_map.hpp> 
#include <boost/unordered_set.hpp>
#include <random>
#include <chrono>


class AddressMapping
{
public:
	AddressMapping();
	~AddressMapping();
	typedef boost::unordered_map<unsigned int, unsigned int> map;
	typedef boost::unordered_map<uint64_t, uint64_t> mapLong;  
	typedef boost::unordered_set<unsigned int> set;
	typedef boost::unordered_set<uint64_t> setLong;				
	static void init(uint32_t startip, int subnet, setLong* givenMacs);
	static void mapAddress(void* buf, unsigned int const len);
	enum AddressType {IPv4, IPv6, MAC};  
			
protected:
	static void generateIPs(std::knuth_b generator, std::uniform_int_distribution<unsigned int> distribution, int size);
	static void generateMACs(std::knuth_b generator, std::uniform_int_distribution<unsigned int> distribution, int size);
	static void getMACs();
};

private:
	static int pow2(int x);
	static void AddressMapping::ipMapping(uint32_t ip1, uint32_t ip2, uint32_t ip3, uint32_t ip4, int size);

#endif // __ADDRESSMAPPING_H

